const myNewGrid = {
    width: 256,
    height: 128,
    data: `                                                                                                                                
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                       XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXX                                    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX     XXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXX                                        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXX                                           XXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                             XXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                              XXXXXXXXXXXXXXXXXXXXXXXXX                    XXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                              XXXXXXXXXXXXXXXXXXXXXXXX                      XXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                               XXXXXXXXXXXXXXXXXXXXX                         XXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                                XXXXXXXXXXXXXXXXXXX                           XXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                                XXXXXXXXXXXXXXXXXX                             XXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                                 XXXXXXXXXXXXXXXX                              XXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                                  XXXXXXXXXXXXXX                                XXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                                   XXXXXXXXXXXX                                  XXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                                                                                                  XXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXX                                                                                                 XXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXX                                                                                                  XXXXXX 
XXXXXXXXXXXXXXXXXXXXXXX                                                                                                  XXXXXX 
XXXXXXXXXXXXXXXXXXXXXXX                                                                                                  XXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXX                                                                                                  XXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXX                                                                                                XXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXX                                                                                               XXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXX               XXXXXX                                                                         XXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX     XXXXXXXXXXXXXXX                                                                       XXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                                      XXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                            XXXXXXX                 XXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                         XXXXXXXXXX                XXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                       XXXXXXXXXXXX                XXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                    XXXXXXXXXXXXX                XXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                XXXXXXXXXXXXXX                XXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                              XXXXXXXXXXXXXX                XXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                           XXXXXXXXXXXXXXX                XXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                      XXXXXXXXXXXXXXXXX                 XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXXXXXXXXXXX                 XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX        XXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXXX                                         XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXXX                                              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXXX                                                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXX 
XXXXXXXXXXXXX                                                         XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                 XXX 
XXXXXXXXXXXXX                                                                           XXXXXXXXXXXXXXXXXXX                 XXX 
XXXXXXXXXXXX                                                                             XXXXXXXXXXXXXXXXXX                 XXX 
XXXXXXXXXXXX                                                                             XXXXXXXXXXXXXXXXXX                 XXX 
XXXXXXXXXXX                                                                               XXXXXXXXXXXXXXXXX                XXXX 
XXXXXXXXXXX                                                                               XXXXXXXXXXXXXXXX                 XXXX 
XXXXXXXXXXX                                                                              XXXXXXXXXXXXXXXXX                 XXXX 
XXXXXXXXXX                 XXXXXXXXXXXXX                                                XXXXXXXXXXXXXXXXX                  XXXX 
XXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXXXX                    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXX 
XXXXXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXX 
XXXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                 XXXXX 
XXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                 XXXXX 
XXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXX 
XXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                 XXXXXX 
XXXXXXXXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                 XXXXXX 
XXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXX 
XXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                 XXXXXXX 
XXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXX 
XXXXXXXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXX 
XXXXXXXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXX 
XXXXXXXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXXX 
XXXXXXXXX        XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                 XXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXX 
XXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                    XXXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXXX 
XXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                      XXXXXXXXXXXXXXXXXXX                   XXXXXXXXXXX 
XXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                        XXXXXXXXXXXXXXXX                    XXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                         XXXXXXXXXXXXXX                    XXXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                            XXXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                            XXXXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                              XXXXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                                                             XXXXXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX             XXXXXXXX                                        XXXXXXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX           XXXXXXXXXXX                                       XXXXXXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXX                                     XXXXXXXXXXXXXXXXX 
XXXXXXXXXXX         XXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXX                                   XXXXXXXXXXXXXXXXXX 
XXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXX                                 XXXXXXXXXXXXXXXXXXX 
XXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXX                             XXXXXXXXXXXXXXXXXXXXX 
XXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXX                        XXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXX         XXXXXXXXXXXXXXXXXXXXXXXXX                   XXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXX         XXXXXXXXXXXXXXXXXXXXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXX         XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX                XXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX                XXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX                XXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXX         XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXX              X   XXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXXX                 XX     XXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXX           XXXXXXXXXXXXXXXXXXXXX                   X       XXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXX               XXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXX                    XX        XXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXX               XXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXX                      XX          XXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXX                       XX            XXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXX                   XXXX                     XXXX              XXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXX                                             XX                XXXXXXXXXXXXXXX 
XXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXX                                              X                 XXXXXXXXXXXXXX 
XXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXX                                                                XXXXXXXXXXXXXX 
XXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXX                                                                 XXXXXXXXXXXXX 
XXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXX                                                                XXXXXXXXXXXXX 
XXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXX                              XXXXX                              XXXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXX                              XXXXX                              XXXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXX                                X X                  X           XXXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXX                               XX                    XX           XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXX                              X                    XXX           XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXX                              X                   XXXXX          XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXX                             X                 XXXX             XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXX                            X                XX                XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXX                           X              XXX                 XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXX                          X  XXXXXXX   XXX                   XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXX                        XXXXXXXXXXXXXXX                     XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                   XXXXXXXXXXXXXXXXX                      XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX              XXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXX 
XXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX        XXXXXXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXX 
XXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXX 
XXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXX 
XXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXX 
XXXXXXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXX 
XXXXXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX        X            XXXXXXXXXXX 
XXXXXXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX        XXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX        X            XXXXXXXXXXX 
XXXXXXXXX                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                      XXXXXXXXXXX 
XXXXXXXX                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                      XXXXXXXXXXX 
XXXXXXXX                XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                       XXXXXXXXXXX 
XXXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                        XXXXXXXXXXX 
XXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                         XXXXXXXXXXX 
XXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                         XXXXXXXXXXX 
XXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                          XXXXXXXXXXX 
XXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                         XXXXXXXXXXX 
XXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXX                       XXXXXXXXXXX 
XXXXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXX                    XXXXXXXXXXXX 
XXXXXX          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX      XX                   XXXXXXXXXXXX 
XXXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX        XX                 XXXXXXXXXXXXX 
XXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXX            XXXXXXXXXXXXX 
XXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX              XXX           XXXXXXXXXXXXXX 
XXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX               XX            XXXXXXXXXXXXXX 
XXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                X            XXXXXXXXXXXXXXX 
XXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                              XXXXXXXXXXXXXXXX 
XXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                               XXXXXXXXXXXXXXXXX 
XXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                               XXXXXXXXXXXXXXXXXX 
XXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                               XXXXXXXXXXXXXXXXXXX 
XXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                              XXXXXXXXXXXXXXXXXXXX 
XXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                              XXXXXXXXXXXXXXXXXXXXX 
XXXX           XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                             XXXXXXXXXXXXXXXXXXXXXX 
XXXX           XXXXXXXXXXXXXXXXXXXXXXXXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                            XXXXXXXXXXXXXXXXXXXXXXXX 
XXXX           XXXXXXXXXXXXXXXXXXXXX         XXXXXXXXXXXXXXXXXXXXXXXXXXXXX                            XXXXXXXXXXXXXXXXXXXXXXXXX 
XXXX            XXXXXXXXXXXX                   XXXXXXXXXXXXXXXXXXXXXXXXXXX                          XXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXX            XXXXXXXXX                       XXXXXXXXXXXXXXXXXXXXXXXX                          XXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXX                                              XXXXXXXXXXXXXXXXXXXXXX              XX         XXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXX                                              XXXXXXXXXXXXXXXXXXXXXX               XX      XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX                                              XXXXXXXXXXXXXXXXXXXXX                X  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXX                                              XXXXXXXXXXXXXXXXXXXX                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXX                                             XXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXX                                            XXXXXXXXXXXXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXX                                            XXXXXXXXXXXXXXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX                                           XXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXX                   XXX                    XXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXX             XXXXXXXX                   XXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                   XXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXXXXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXXX         XX XXXXXXXXXXXXXXXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    XXXX   XXX   XXXXXXXXXXXXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXX      XXX  XXXXXXXXXXXXXXXXXXXX                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXXXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX               XXXXXXXXXXXXXXXXXXXXX                    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                 XXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXX                    XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXX                   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXXXXXXXXXXXXXX                  XX     XXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXX                        XXXXXXXXXXXXXXXXXXXXXXXX                          XXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                            XXXXXXXXXXXXXXXXXXXXXXXX                           XXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXX                             XXXXXXXXXXXXXXXXXXXXXXXXXX                           XXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXX                               XXXXXXXXXXXXXXXXXXXXXXXXXX                            XXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXX                                XXXXXXXXXXXXXXXXXXXXXXXXXXX                             XXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXX                                 XXXXXXXXXXXXXXXXXXXXXXXXXXX                              XXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXX                                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXX                XXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXX                                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXX                XXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXX                                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX          XXXX               XXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXX                               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX        XX XX                XXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXX                               XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX     XXX                    XXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXX                              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX    XX                       XXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX                       XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  XX                        XXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX                   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                         XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX                  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                         XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                        XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX                XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                      XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX        XX     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX         XXX   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                    XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX         XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                    XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX          XX  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                   XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX           XX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX                XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXXX             XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX             XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX   XXXX          XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX      XXX        XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX     XXX         XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  XXX           XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX               XXXXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX               XXXXXXXXXXXXXXXXXXX 
XXXXXXXXX               XXXXXXXXXXXXXXXXXXXX                  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX              XXXXXXXXXXXXXXXXXXXX 
XXXXXXXXX               XXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX               XXXXXXXXXXXXXXXX                        XXXXXXXXXXXXXXXXXXXXXXXXXXXXX             XXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX                XXXXXXXXXXXX                            XXXXXXXXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXX                 XXXXXXXXXX                              XXXXXXXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXX                 XXXXXXX                                 XXXXXXXXXXXXXXXXXXXXXXXXX            XXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXX                  XXXXX                     X             XXXXXXXXXXXXXXXXXXXXXXXX           XXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXX                                           XX                 XX    XX     XXXX            XXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXX                                         XXX                  X   XX                     XXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXX                                       XX X                  X   X                     XXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXX                                     XX  X                   X  X                    XXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXX                                    X   X                   XX X                   XXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXX                                  XX   X                    XXX                  XXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXX                               XXXXX   X                   XX                  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXX                            XXXXXXXXXXXX                                      XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXX                          XXXXXXXXXXXXX                                     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXX                      XXXXXXXXXXXXXXXXX                                   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXX                   XXXXXXXXXXXXXXXXXXXX                                 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXX              XXXXXXXXXXXXXXXXXXXXXXX                     XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX 
                                                                                                                                
`,
    checkpoints: [
        [30, 24],[29, 27],[29, 28],[28, 30],[28, 30],
        [27, 33],[26, 35],[26, 36],[26, 38],[26, 40],
        [26, 41],[26, 44],[26, 44],[26, 46],[26, 49],
        [27, 51],[28, 53],[29, 54],[30, 56],[31, 58],
        [32, 59],[32, 60],[32, 61],[33, 63],[34, 65],
        [34, 66],[35, 68],[36, 69],[37, 71],[38, 73],
        [38, 74],[38, 76],[38, 78],[38, 81],[39, 83],
        [38, 84],[37, 87],[36, 90],[35, 91],[34, 93],
        [33, 95],[33, 96],[32, 98],[32, 102],[31, 103],
        [31, 105],[33, 108],[34, 110],[36, 110],[39, 112],
        [38, 112],[40, 113],[42, 114],[44, 115],[45, 115],
        [46, 115],[49, 115],[50, 115],[51, 115],[54, 115],
        [56, 115],[59, 115],[62, 115],[63, 115],[65, 115],
        [67, 115],[69, 114],[70, 114],[72, 113],[74, 112],
        [75, 111],[76, 111],[78, 110],[81, 109],[82, 108],
        [84, 108],[85, 107],[87, 106],[88, 105],[89, 103],
        [90, 101],[91, 100],[92, 99],[93, 97],[94, 95],
        [94, 93],[94, 91],[95, 89],[95, 87],[95, 86],
        [95, 85],[95, 83],[93, 79],[93, 79],[91, 77],
        [90, 75],[89, 73],[88, 72],[87, 70],[87, 68],
        [87, 67],[88, 65],[88, 63],[89, 62],[91, 60],
        [92, 58],[93, 57],[95, 56],[96, 55],[97, 54],
        [99, 52],[100, 52],[103, 52],[104, 52],[106, 52],
        [110, 52],[111, 52],[112, 52],[115, 54],[116, 55],
        [117, 57],[120, 59],[121, 60],[122, 62],[123, 62],
        [123, 64],[124, 65],[124, 67],[124, 68],[124, 69],
        [123, 71],[122, 73],[122, 74],[121, 76],[120, 77],
        [120, 78],[119, 79],[119, 80],[118, 82],[118, 83],
        [118, 84],[118, 85],[118, 86],[119, 88],[120, 89],
        [120, 90],[120, 91],[120, 93],[121, 94],[121, 95],
        [121, 97],[120, 99],[120, 100],[120, 101],[120, 102],
        [121, 104],[122, 106],[124, 106],[125, 107],[126, 107],
        [128, 107],[129, 107],[131, 107],[131, 107],[133, 106],
        [134, 105],[135, 104],[136, 104],[137, 103],[137, 102],
        [139, 102],[140, 101],[142, 101],[144, 102],[146, 103],
        [147, 104],[148, 104],[150, 104],[152, 104],[153, 104],
        [155, 103],[156, 103],[158, 102],[159, 101],[160, 100],
        [161, 98],[162, 97],[163, 95],[164, 93],[164, 91],
        [165, 90],[166, 88],[167, 86],[168, 84],[170, 83],
        [171, 81],[172, 80],[174, 79],[176, 78],[177, 78],
        [180, 77],[180, 77],[182, 77],[183, 78],[185, 79],
        [186, 79],[188, 80],[188, 81],[190, 83],[192, 84],
        [193, 86],[194, 87],[195, 89],[197, 91],[198, 92],
        [199, 93],[201, 94],[202, 95],[204, 96],[206, 97],
        [208, 97],[209, 98],[211, 98],[213, 98],[215, 98],
        [217, 98],[219, 98],[221, 98],[223, 97],[225, 96],
        [226, 96],[228, 94],[230, 93],[231, 92],[233, 89],
        [234, 88],[234, 86],[235, 84],[235, 83],[235, 80],
        [235, 78],[235, 76],[234, 73],[234, 71],[233, 69],
        [233, 67],[232, 64],[231, 60],[231, 59],[230, 56],
        [229, 52],[229, 50],[230, 48],[231, 46],[232, 45],
        [233, 44],[234, 42],[235, 41],[235, 39],[235, 37],
        [235, 35],[235, 34],[235, 33],[235, 30],[235, 28],
        [234, 27],[234, 25],[233, 24],[231, 23],[230, 22],
        [228, 21],[225, 19],[224, 18],[222, 17],[220, 16],
        [217, 16],[215, 16],[214, 17],[211, 17],[209, 18],
        [208, 18],[207, 19],[205, 20],[204, 21],[203, 23],
        [203, 25],[202, 27],[201, 30],[201, 30],[201, 30],
        [200, 32],[199, 33],[199, 34],[197, 36],[197, 37],
        [196, 38],[195, 40],[195, 41],[194, 42],[192, 44],
        [192, 45],[191, 45],[189, 46],[188, 46],[187, 46],
        [183, 46],[182, 46],[181, 46],[180, 46],[178, 46],
        [177, 46],[176, 45],[176, 44],[175, 42],[175, 42],
        [174, 40],[174, 39],[174, 37],[174, 36],[173, 34],
        [173, 32],[173, 30],[174, 29],[175, 27],[175, 25],
        [175, 24],[175, 22],[175, 21],[175, 19],[174, 18],
        [174, 17],[172, 15],[172, 13],[170, 12],[169, 11],
        [168, 10],[167, 9],[165, 9],[164, 9],[163, 9],
        [161, 9],[160, 10],[158, 10],[156, 10],[155, 10],
        [153, 11],[151, 11],[149, 12],[148, 12],[146, 13],
        [146, 14],[144, 15],[144, 16],[143, 17],[141, 19],
        [140, 19],[139, 20],[137, 21],[135, 21],[133, 21],
        [131, 22],[129, 22],[128, 21],[125, 20],[122, 20],
        [120, 20],[118, 19],[116, 19],[115, 19],[113, 18],
        [111, 17],[110, 17],[107, 17],[105, 16],[104, 15],
        [102, 15],[99, 15],[96, 16],[94, 16],[93, 15],
        [91, 14],[90, 14],[87, 13],[82, 13],[81, 13],
        [78, 13],[76, 14],[74, 14],[72, 16],[70, 16],
        [68, 17],[67, 18],[66, 21],[66, 23],[65, 25],
        [64, 26],[64, 28],[64, 31],[65, 33],[65, 34],
        [65, 36],[64, 38],[64, 39],[64, 41],[65, 43],
        [65, 45],[65, 46],[65, 48],[66, 50],[66, 51],
        [66, 53],[66, 55],[66, 56],[67, 59],[67, 61],
        [67, 63],[67, 65],[67, 68],[67, 70],[67, 72],
        [67, 74],[67, 77],[67, 79],[67, 82],[67, 84],
        [68, 87],    ]
}

terminal.addCommand("neural-car", async function(args) {
    await terminal.modules.load("window", terminal)
    await terminal.modules.load("neural", terminal)
    await terminal.modules.import("game", window)

    let terminalWindow = terminal.modules.window.make({
        name: "Neural Car Simulation (Genetic Algorithm)"
    })

    terminal.onInterrupt(() => {
        terminalWindow.close()
        gameRunning = false
    })

    let gridSize = new Vector2d(256, 128)
    const raycastLines = 10
    const carFOV = Math.PI / 2
    const carTurnSpeed = Math.PI / 90
    const mutationRate = 0.05
    const maxTicks = 10000
    let totalBestScore = 0

    let activeZooming = false

    let currViewPos = new Vector2d(0, 0)
    let currViewGoal = currViewPos.copy()
    let currZoom = 1
    let currZoomGoal = currZoom

    function canvasPosToZoomPos(pos) {
        return pos.scale(currZoom).add(currViewPos)
    }

    const canvas = terminalWindow.CANVAS
    const context = terminalWindow.CONTEXT

    canvas.style.cursor = "none"

    let gameRunning = true

    let wallData = []
    let checkpoints = []

    function initWallData() {
        for (let x = 0; x < gridSize.x; x++) {
            wallData[x] = []
            for (let y = 0; y < gridSize.y; y++) {
                wallData[x][y] = false
            }
        }
    }

    function drawBestScore() {
        context.strokeStyle = "#fff"
        context.font = "20px monospace"
        context.lineWidth = 1
        context.strokeText("Best Score: " + totalBestScore, 10, 30)
    }

    function loadWallData(wallString) {
        const lines = wallString.split("\n")
        for (let x = 0; x < gridSize.x; x++) {
            for (let y = 0; y < gridSize.y; y++) {
                wallData[x][y] = lines[x][y] == "X"
            }
        }
    }

    function loadCompressedWallData(wallData) {
        // wallData is Uint8Array, each byte is 8 consecutive cells
        for (let x = 0; x < gridSize.x; x++) {
            for (let y = 0; y < gridSize.y; y++) {
                let byte = wallData[Math.floor(y / 8) * gridSize.x + x]
                let bit = y % 8
                wallData[x][y] = (byte & (1 << bit)) != 0
            }
        }
    }

    function clearCanvas() {
        context.clearRect(0, 0, canvas.width, canvas.height)
        context.fillStyle = "black"
        context.fillRect(0, 0, canvas.width, canvas.height)
    }

    function drawWalls() {
        const blockSize = new Vector2d(canvas.width / gridSize.x, canvas.height / gridSize.y)
        for (let x = 0; x < gridSize.x; x++) {
            let wallCount = 0
            let wallStartY = 0
            for (let y = 0; y < gridSize.y; y++) {
                if (!wallData[x][y] && wallCount == 0) {
                    wallCount++
                    wallStartY = y
                } else if (!wallData[x][y]) {
                    wallCount++
                } else {
                    if (wallCount > 0) {
                        context.fillStyle = "white"
                        let rectPos = new Vector2d(x * blockSize.x, wallStartY * blockSize.y)
                        let rectSize = new Vector2d(blockSize.x + 1, blockSize.y * wallCount)
                        rectPos = canvasPosToZoomPos(rectPos)
                        rectSize = rectSize.scale(currZoom)
                        if (rectPos.x + rectSize.x < 0 || rectPos.x > canvas.width || rectPos.y + rectSize.y < 0 || rectPos.y > canvas.height) {
                            wallCount = 0
                            continue
                        }
                        context.fillRect(rectPos.x, rectPos.y, rectSize.x, rectSize.y)
                    }
                    wallCount = 0
                }
            }
        }
    }

    function drawCheckpoints() {
        const blockSize = new Vector2d(canvas.width / gridSize.x, canvas.height / gridSize.y)
        for (let i = 0; i < checkpoints.length; i++) {
            context.fillStyle = "red"
            context.fillRect(checkpoints[i].x * blockSize.x, checkpoints[i].y * blockSize.y, blockSize.x, blockSize.y)
        }
    }

    function loadCheckpoints(checkpointData) {
        checkpoints = checkpointData.map((checkpoint) => new Vector2d(checkpoint[0], checkpoint[1]))
    }

    function loadGrid(grid) {
        gridSize.x = grid.width
        gridSize.y = grid.height
        initWallData()
        loadWallData(grid.data)
        loadCheckpoints(grid.checkpoints)
    }

    function nearestCheckpoint(pos) {
        let nearest = null
        let nearestIndex = -1
        let nearestDist = Infinity
        for (let i = 0; i < checkpoints.length; i++) {
            let dist = checkpoints[i].distance(pos)
            if (dist < nearestDist) {
                nearestDist = dist
                nearest = checkpoints[i]
                nearestIndex = i
            }
        }
        return [nearest, nearestIndex]
    }

    function canvasPosFromPos(pos) {
        return new Vector2d(
            pos.x / gridSize.x * canvas.width,
            pos.y / gridSize.y * canvas.height
        )
    }

    function posFromCanvasPos(canvasPos) {
        return new Vector2d(
            canvasPos.x / canvas.width * gridSize.x,
            canvasPos.y / canvas.height * gridSize.y
        )
    }

    function raycast(startPos, direction, maxDist) {
        let pos = startPos.copy()
        let dist = 0
        let directionLength = direction.length
        while (dist <= maxDist) {
            let x = Math.floor(pos.x)
            let y = Math.floor(pos.y)
            if (x < 0 || x >= gridSize.x || y < 0 || y >= gridSize.y) {
                return [Infinity, pos]
            }
            if (wallData[x][y]) {
                return [dist, pos]
            }
            pos.iadd(direction)
            dist += directionLength
        }
        return [Infinity, pos]
    }

    class Brain {

        constructor() {
            this.net = new terminal.modules.neural.Net([raycastLines + 3, 10, 2])
            this.signals = ["left", "right"]
        }

        mutate() {
            this.net.mutate(mutationRate)
        }

        copy() {
            let newBrain = new Brain()
            newBrain.net = this.net.copy()
            return newBrain
        }

        think(car) {
            let inputs = []
            inputs.push(car.pos.x / gridSize.x)
            inputs.push(car.pos.y / gridSize.y)
            inputs.push(car.angle % (Math.PI * 2))
            for (let i = 0; i < raycastLines; i++) {
                inputs.push(car.lastRaycastData[i] / gridSize.length * 20)
            }
            let outputs = this.net.input(inputs)
            let maxIndex = terminal.modules.neural.indexOfMax(outputs)
            return this.signals[maxIndex]
        }
    }

    let lastSound = Date.now()

    class Car {

        constructor() {
            this.pos = checkpoints[0].copy()
            this.speed = 0.3
            this.angle = Math.PI / 2
            this.color = "blue"
            this.alive = true
            this.lastRaycastData = null
            this.brain = new Brain()
            this.score = 0
            this.bestScore = 0
            this.waypoints = []
            this.ticks = 0
        }

        die() {
            if (this.alive) {
                if (Date.now() - lastSound > 20) {
                    playFrequency(
                        Math.random() * 300 + 800,
                        100,
                        0.1
                    )
                    lastSound = Date.now()
                }
            }
            this.alive = false
        }

        get reachedEnd() {
            return this.score >= checkpoints.length - 2
        }

        get vel() {
            return Vector2d.fromAngle(this.angle).scale(this.speed)
        }

        checkCollision() {
            let x = Math.floor(this.pos.x)
            let y = Math.floor(this.pos.y)
            if (x < 0 || x >= gridSize.x || y < 0 || y >= gridSize.y) {
                return true
            }
            return wallData[x][y]
        }

        update() {
            if (!this.alive) {
                return
            }

            this.ticks++

            let signal = this.brain.think(this)

            if (signal == "left") {
                this.angle -= carTurnSpeed
            } else if (signal == "right") {
                this.angle += carTurnSpeed
            }

            this.pos.iadd(this.vel)
            if (this.checkCollision()) {
                this.die()
            }

            this.score = this.calcScore()
            if (this.score > this.bestScore) {
                this.bestScore = this.score
            }

            if (this.bestScore - 1 > this.score)
                this.die()

            if (this.ticks % 5 == 0)
                this.waypoints.push(this.pos.copy())
        }

        get canvasPos() {
            return canvasPosToZoomPos(canvasPosFromPos(this.pos))
        }

        calcScore() {
            let [_, score] = nearestCheckpoint(this.pos)
            return score
        }

        raycast({draw=false}={}) {
            this.lastRaycastData = []
            let maxDist = Infinity
            for (let i = 0; i < raycastLines; i++) {
                let angle = this.angle - carFOV / 2 + carFOV / (raycastLines - 1) * i
                let direction = Vector2d.fromAngle(angle)
                let [dist, hitPos] = raycast(this.pos, direction, maxDist)
                this.lastRaycastData.push(dist)

                if (draw) {
                    let canvasPos = canvasPosToZoomPos(canvasPosFromPos(hitPos))
                    context.beginPath()
                    context.moveTo(this.canvasPos.x, this.canvasPos.y)
                    context.lineTo(canvasPos.x, canvasPos.y)
                    context.strokeStyle = "rgba(0, 0, 0, 0.2)"
                    context.lineWidth = 1
                    context.stroke()
                    context.closePath()
                }
            }
        }

        draw() {
            let size = new Vector2d(3.5, 2).scale(1 / gridSize.x * canvas.width).scale(currZoom)
            context.save()
            context.translate(this.canvasPos.x, this.canvasPos.y)
            context.rotate(this.angle)
            context.beginPath()
            let halfSize = size.scale(0.5)
            context.rect(-halfSize.x, -halfSize.y, size.x, size.y)
            context.strokeStyle = "black"
            context.lineWidth = 3
            context.fillStyle = this.alive ? this.color : "red"
            context.stroke()
            context.fill()
            context.closePath()

            context.fillStyle = "white"
            context.font = `${size.y}px monospace`
            context.textAlign = "center"
            context.textBaseline = "middle"
            context.fillText(this.score, 0, 0)

            context.restore()
        }

    }

    function getBestCar(cars, allowDead=false) {
        let bestCar = cars[0]
        let bestScore = cars[0].score
        for (let car of cars) {
            if ((car.alive || allowDead) && car.score > bestScore) {
                bestScore = car.score
                bestCar = car
            }
        }
        return [bestCar, bestScore]
    }

    initWallData()
    loadGrid(myNewGrid)

    async function initWallDrawer() {
        let mouseDown = false
        let leftMouseDown = false
        let currMousePos = null
        let mouseDownPos = null

        let currDrawMode = "paint"

        function redraw() {
            clearCanvas()
            drawWalls()
            drawCheckpoints()
        }

        function posFromEvent(event) {
            let rect = canvas.getBoundingClientRect()
            let xCanvasPos = event.clientX - rect.left
            let yCanvasPos = event.clientY - rect.top
            let x = Math.floor(xCanvasPos / canvas.width * gridSize.x)
            let y = Math.floor(yCanvasPos / canvas.height * gridSize.y)
            return new Vector2d(x, y)
        }

        canvas.addEventListener("mousedown", function(event) {
            if (event.button == 0) {
                mouseDown = true
            } else if (event.button == 2) {
                leftMouseDown = true
            }
            let pos = posFromEvent(event)
            mouseDownPos = pos
        })

        canvas.addEventListener("mouseup", function(event) {
            mouseDown = false
            leftMouseDown = false
        })

        canvas.addEventListener("mouseleave", function(event) {
            mouseDown = false
            leftMouseDown = false
            currMousePos = null
        })

        canvas.addEventListener("contextmenu", function(event) {
            event.preventDefault()
        })

        function fill(pos, val) {
            let queue = []
            queue.push(pos)
            while (queue.length > 0) {
                let pos = queue.shift()
                if (pos.x < 0 || pos.x >= gridSize.x || pos.y < 0 || pos.y >= gridSize.y) {
                    continue
                }
                if (wallData[pos.x][pos.y] == val) {
                    continue
                }
                wallData[pos.x][pos.y] = val
                queue.push(pos.add(new Vector2d(1, 0)))
                queue.push(pos.add(new Vector2d(-1, 0)))
                queue.push(pos.add(new Vector2d(0, 1)))
                queue.push(pos.add(new Vector2d(0, -1)))
            }
        } 

        function fillRect(start, end, val) {
            for (let x = start.x; x <= end.x; x++) {
                for (let y = start.y; y <= end.y; y++) {
                    wallData[x][y] = val
                }
            }
        }

        function fillLine(start, end, val) {
            let delta = end.sub(start)
            let direction = delta.normalized
            for (let i = 0; i < delta.length; i++) {
                let pos = start.add(direction.scale(i))
                wallData[Math.floor(pos.x)][Math.floor(pos.y)] = val
            }
        }

        function drawCircle(pos, radius, val) {
            radius = Math.floor(radius)
            for (let x = pos.x - radius; x <= pos.x + radius; x++) {
                for (let y = pos.y - radius; y <= pos.y + radius; y++) {
                    if (x < 0 || x >= gridSize.x || y < 0 || y >= gridSize.y) {
                        continue
                    }
                    let dist = new Vector2d(x, y).sub(pos).length
                    if (Math.floor(dist) <= Math.floor(radius)) {
                        wallData[x][y] = val
                    }
                }
            }
        }

        canvas.addEventListener("mousemove", function(event) {
            let pos = posFromEvent(event)

            if (currDrawMode == "paint") {
                if (mouseDown) {
                    wallData[pos.x][pos.y] = true
                } else if (leftMouseDown) {
                    wallData[pos.x][pos.y] = false
                }
            }

            if (currDrawMode == "fill") {
                if (mouseDown) {
                    fill(pos, true)
                } else if (leftMouseDown) {
                    fill(pos, false)
                }
            }

            if (currDrawMode == "rect" && mouseDownPos) {
                if (mouseDown) {
                    fillRect(mouseDownPos, pos, true)
                } else if (leftMouseDown) {
                    fillRect(mouseDownPos, pos, false)
                }
            }

            if (currDrawMode == "line" && mouseDownPos) {
                if (mouseDown) {
                    fillLine(mouseDownPos, pos, true)
                } else if (leftMouseDown) {
                    fillLine(mouseDownPos, pos, false)
                }
            }

            if (currDrawMode == "circle") {
                if (mouseDown) {
                    drawCircle(pos, 5, true)
                } else if (leftMouseDown) {
                    drawCircle(pos, 5, false)
                }
            }

            currMousePos = pos
            redraw()
        })

        terminal.window.addEventListener("resize", function(event) {
            redraw()
        })

        addEventListener("keydown", function(event) {
            if (event.key == "Enter") {
                if (gridSize.x * gridSize.y % 8 != 0) {
                    alert("Grid size must be a multiple of 8")
                    return
                }
                let dataString = ""
                for (let x = 0; x < gridSize.x; x++) {
                    for (let y = 0; y < gridSize.y; y++) {
                        dataString += wallData[x][y] ? "X" : " "
                    }
                    dataString += "\n"
                }

                let outString = `const myNewGrid = {\n`
                outString += `    width: ${gridSize.x},\n`
                outString += `    height: ${gridSize.y},\n`
                outString += `    data: \`${dataString}\`,\n`
                outString += `    checkpoints: [\n        `

                for (let i = 0; i < checkpoints.length; i++) {
                    outString += `[${checkpoints[i].x}, ${checkpoints[i].y}],`
                    if (i % 5 == 4) {
                        outString += "\n        "
                    }
                }
                outString += "    ]\n}"

                terminal.copy(outString, {printMessage: false})
                console.log(outString)
            } else if (event.key == " " && currMousePos != null) {
                checkpoints.push(currMousePos)
            } else if (event.key == "Backspace") {
                let [nearest, nearestIndex] = nearestCheckpoint(currMousePos)
                if (nearest != null) {
                    checkpoints.splice(nearestIndex, 1)
                }
            } else if (event.key == "f") {
                currDrawMode = "fill"
                console.log("fill mode activated")
            } else if (event.key == "p") {
                currDrawMode = "paint"
                console.log("paint mode activated")
            } else if (event.key == "l") {
                currDrawMode = "line"
                console.log("line mode activated")
            } else if (event.key == "r") {
                currDrawMode = "rect"
                console.log("rect mode activated")
            } else if (event.key == "c") {
                currDrawMode = "circle"
                console.log("circle mode activated")
            }
            redraw()
        })

        redraw()

        while (gameRunning) {
            await sleep(100)
        }
    }

    async function initSimulation() {
        const cars = []
        let bestWaypoints = []

        for (let i = 0; i < args.cars; i++) {
            cars.push(new Car())
        }

        function drawBestway() {
            if (bestWaypoints.length == 0) return
            let bestwayColor = "rgba(0, 255, 0, 0.5)"
            context.lineWidth = 10
            context.lineCap = "round"
            context.beginPath()
            let firstCanvasPos = canvasPosFromPos(bestWaypoints[0])
            firstCanvasPos = canvasPosToZoomPos(firstCanvasPos)
            context.moveTo(firstCanvasPos.x, firstCanvasPos.y)
            for (let i = 0; i < bestWaypoints.length - 1; i++) {
                let pos = canvasPosFromPos(bestWaypoints[i + 1])
                pos = canvasPosToZoomPos(pos)
                context.lineTo(pos.x, pos.y)
            }
            context.strokeStyle = bestwayColor
            context.stroke()
            context.closePath()
        }

        function redraw() {
            clearCanvas()
            drawWalls()
            drawBestway()
            for (let i = 0; i < cars.length; i++) {
                cars[i].draw()
                cars[i].raycast({draw: true})
            }
            drawBestScore()
        }

        function update() {
            for (let i = 0; i < cars.length; i++) {
                cars[i].update()
            }
        }

        function geneticAlgorithm() {
            let [bestCar, bestScore] = getBestCar(cars, true)
            bestWaypoints = bestCar.waypoints.slice()

            if (bestScore > totalBestScore) {
                totalBestScore = bestScore
            }

            let newCars = []
            for (let i = 0; i < cars.length; i++) {
                let newCar = new Car()
                newCar.brain = bestCar.brain.copy()
                if (i != 0) {
                    newCar.brain.mutate(mutationRate)
                }
                newCars.push(newCar)
            }

            cars.splice(0, cars.length)
            for (let i = 0; i < newCars.length; i++) {
                cars.push(newCars[i])
            }
        }
        
        addEventListener("keydown", function(event) {
            if (event.key == "ArrowDown") {
                currZoomGoal *= 1.1
            } else if (event.key == "ArrowUp") {
                currZoomGoal /= 1.1
            }

            if (event.key == " ") {
                activeZooming = !activeZooming
                if (!activeZooming) {
                    currViewGoal = new Vector2d(0, 0)
                    currZoomGoal = 1
                } else {
                    currZoomGoal = 2
                }
            }
        })

        while (gameRunning) {
            let tick = 0

            while (tick < maxTicks) {
                redraw()
                update()
                await sleep(30)

                let aliveCars = 0
                for (let i = 0; i < cars.length; i++) {
                    if (cars[i].alive) {
                        aliveCars++
                    }
                }

                if (cars.every(car => !car.alive)) {
                    break
                }

                // if a car has reached the end of the track, stop the simulation
                if (cars.reduce((acc, car) => acc + (car.reachedEnd ? 1 : 0), 0) > 0) {
                    break
                }

                tick++

                if (tick % 1 == 0) {
                    let [bestCar, bestScore] = getBestCar(cars)
                    if (bestCar) {
                        bestWaypoints = bestCar.waypoints

                        if (activeZooming) {
                            // set viewOffset to the best car
                            currViewGoal = canvasPosFromPos(bestCar.pos).scale(-currZoom).add(
                                new Vector2d(canvas.width / 2, canvas.height / 2)
                            )
                        }
                    }

                    if (bestScore > totalBestScore) {
                        totalBestScore = bestScore
                    }
                }

                let delta = currViewGoal.sub(currViewPos)
                currViewPos = currViewPos.add(delta.scale(0.05))

                currZoom += (currZoomGoal - currZoom) * 0.05
            }

            geneticAlgorithm()
            playFrequency(
                1000, 100, 0.1
            )
        }
    }

    if (args.edit) {
        await initWallDrawer()
    } else {
        await initSimulation()
    }

    terminalWindow.close()
}, {
    description: "start a neural car simulation",
    args: {
        "?cars:i:1~9999": "number of cars to simulate",
        "?edit:b": "activate the wall editor",
    },
    defaultValues: {
        cars: 100,
    }
})